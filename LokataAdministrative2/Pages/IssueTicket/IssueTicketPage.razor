@page "/issuedTicketPage"
@inject NavigationManager navigation

<div class="mb-3">
    <label for="formFile" class="form-label">Scan Document Physical Copy</label>
    <input class="form-control w-auto" type="file" id="formFile">
</div>

<EditForm Model="citation" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>

    <div class="row mb-3">
        <div class="col-md-7">
            <label class="form-label">TCT No.</label>
            <InputText class="form-control w-auto" @bind-Value="citation.TctNo"></InputText>
            <ValidationMessage For="@(() => citation.TctNo)"></ValidationMessage>
        </div>

        <div class="col-md-5">
            <label class="form-label">Date Record</label>
            <InputText type="date" class="form-control" @bind-Value="citation.DateRecord"></InputText>
            <ValidationMessage For="@(() => citation.DateRecord)"></ValidationMessage>
        </div>
    </div>

    <h4>I. Driver's Name</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col-md-4">
                <label for="lastNameValidation" class="form-label">Last name</label>
                <InputText id="lastNameValidation" class="form-control" @bind-Value="citation.LastName" required DisplayName="Last Name"></InputText>
                <ValidationMessage For="@(() => citation.LastName)"></ValidationMessage>
            </div>

            <div class="col-md-4">
                <label class="form-label">First name</label>
                <InputText class="form-control" @bind-Value="citation.FirstName"></InputText>
                <ValidationMessage For="@(() => citation.FirstName)"></ValidationMessage>
            </div>

            <div class="col-md-4">
                <label class="form-label">Middle name</label>
                <InputText class="form-control" @bind-Value="citation.MiddleName"></InputText>
                <ValidationMessage For="@(() => citation.MiddleName)"></ValidationMessage>
            </div>
        </div>
    </div>

    <h4>Address</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col-md-4">
                <label class="form-label">Province</label>
                <select class="form-control" @onchange="ProvinceClicked">
                    <option value="0">-- Select Province --</option>
                    @foreach (var item in provinces)
                    {
                        <option value="@item.Province">@item.Province</option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label class="form-label">City</label>
                <select class="form-control" @onchange="CityClicked">
                    <option value="0">-- Select City --</option>
                    @foreach (var item in cities)
                    {
                        <option value="@item.City">@item.City</option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label class="form-label">Barangay</label>
                <select class="form-control" @onchange="BarangayClicked">
                    <option value="">-- Select Barangay --</option>
                    @foreach (var item in barangays)
                    {
                        <option value="@item.Barangay">@item.Barangay</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <hr />
    <h4>II. License/Permit No.</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col-sm-4">
                <label class="form-label">License No.</label>
                <InputText class="form-control w-75" @bind-Value="citation.LicenseNo"></InputText>
                <ValidationMessage For="@(() => citation.LicenseNo)"></ValidationMessage>
            </div>

            <div class="col-sm-4 mt-4">
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="licenseType" id="Professional-License" value="Professional" @onchange="SelectedLicenseType">
                    <label class="form-check-label" for="Professional-License">Professional</label>
                </div>
            </div>

            <div class="col-sm mt-4">
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="licenseType" id="Non-Professional-License" value="Non-Professional" @onchange="SelectedLicenseType">
                    <label class="form-check-label" for="Non-Professional-License">Non-Professional</label>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <h4>III. Motor Vehicle Description</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col">
                <label class="form-label">Plate No.</label>
                <InputText class="form-control" @bind-Value="vehicle.PlateNo"></InputText>
                <ValidationMessage For="@(() => vehicle.PlateNo)"></ValidationMessage>
            </div>
            <div class="col">
                <label class="form-label">Color</label>
                <InputText class="form-control" @bind-Value="vehicle.Color"></InputText>
                <ValidationMessage For="@(() => vehicle.Color)"></ValidationMessage>
            </div>
            <div class="col">
                <label class="form-label">Make</label>
                <InputText class="form-control" @bind-Value="vehicle.Make"></InputText>
                <ValidationMessage For="@(() => vehicle.Make)"></ValidationMessage>
            </div>
            <div class="col">
                <label class="form-label">Model</label>
                <InputText class="form-control" @bind-Value="vehicle.Model"></InputText>
                <ValidationMessage For="@(() => vehicle.Model)"></ValidationMessage>
            </div>
        </div>
    </div>
    <hr/>
    <h4>IV. Place of Apprehension</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col">
                <label class="form-label">Street</label>
                <InputText class="form-control" @bind-Value="placeApprehended.Street"></InputText>
                <ValidationMessage For="@(() => placeApprehended.Street)"></ValidationMessage>
            </div>
            <div class="col">
                <label class="form-label">Barangay</label>
                <InputText class="form-control" @bind-Value="placeApprehended.Barangay"></InputText>
                <ValidationMessage For="@(() => placeApprehended.Barangay)"></ValidationMessage>
            </div>
            <div class="col">
                <label class="form-label">Date</label>
                <InputText type="date" class="form-control" @bind-Value="placeApprehended.Date"></InputText>
                <ValidationMessage For="@(() => placeApprehended.Date)"></ValidationMessage>
            </div>
            <div class="col">
                <label class="form-label">Time</label>
                <InputText type="time" class="form-control" @bind-Value="placeApprehended.Time"></InputText>
                <ValidationMessage For="@(() => placeApprehended.Time)"></ValidationMessage>
            </div>
        </div>
    </div>
    <hr/>
    <h4>V. Violation(s)</h4>
    <div class="container mb-3">
        <table class="table table-hover table-sm">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Category</th>
                    <th>Name</th>
                    <th>Offense</th>
                    <th>Fine</th>
                </tr>
            </thead>
            <tbody>
                @if (userViolations != null)
                {
                    @foreach (var item in userViolations)
                    {
                        <tr>
                            <td>@(userViolations.IndexOf(item) + 1)</td>
                            <td>@item.Category</td>
                            <td>@item.Name</td>
                            <td>@item.Offense</td>
                            <td>@item.Fine</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <!-- Button trigger modal -->
        <button type="button" @onclick="ShowPopup" class="btn btn-primary"> Add Violation</button>
        @if (popup)
        {
            <div class="modal" tabindex="-1" style="display:block">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirmation</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick=CloseDialog></button>
                        </div>
                        <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-4 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-control" @onchange="ViolationCategoryClicked">
                                            <option value="0">-- Select Category --</option>
                                            @foreach (var item in categories)
                                            {
                                            <option value="@item.Category">@item.Category</option>
                                            }
                                        </select>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label class="form-label">Name</label>
                                        <select class="form-control" @onchange="ViolationClicked">
                                            <option value="0">-- Select Name --</option>
                                            @foreach (var item in violations)
                                            {
                                            <option value="@item.Name">@item.Name</option>
                                            }
                                        </select>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label class="form-label">Offense</label>
                                        <select class="form-control" @onchange="ViolationFeeClicked">
                                            <option value="">-- Select Offense --</option>
                                            @foreach (var item in violationFees)
                                            {
                                                <option value="1 + @item.FirstOffense">1st Offense: @item.FirstOffense</option>
                                                <option value="2 + @item.SecondOffense">2nd Offense: @item.SecondOffense</option>
                                                <option value="3 + @item.ThirdOffense">3rd Offense: @item.ThirdOffense</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick=CloseDialog>Discard Changes</button>
                            <button type="button" class="btn btn-success" @onclick=@(()=>SaveChangesAsync())>Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <hr />
    <h4>VI. Item(s) Confiscated</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col-md-4">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" @onchange="SelectedLicense" id="driverLicense">
                    <label class="form-check-label" for="driverLicense">
                        Driver's License
                    </label>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" @onchange="SelectedVehicle" id="motorVehicle">
                    <label class="form-check-label" for="motorVehicle">
                        Motor Vehicle
                    </label>
                </div>
            </div>
            <div class="col-md-4">
                <label class="form-label" for="flexCheckDefault1">Others</label>
                <input class="form-text" type="text" id="others" />
            </div>
        </div>
    </div>
    <hr/>
    <h4>VII. Apprehending Officer</h4>
    <div class="container mb-3">
        <div class="row">
            <div class="col-md-4">
                <label for="lastNameValidation" class="form-label">Last name</label>
                <InputText id="lastNameValidation" class="form-control" @bind-Value="officer.LastName" required DisplayName="Last Name"></InputText>
                <ValidationMessage For="@(() => officer.LastName)"></ValidationMessage>
            </div>

            <div class="col-md-4">
                <label class="form-label">First name</label>
                <InputText class="form-control" @bind-Value="officer.FirstName"></InputText>
                <ValidationMessage For="@(() => officer.FirstName)"></ValidationMessage>
            </div>

            <div class="col-md-4">
                <label class="form-label">Middle name</label>
                <InputText class="form-control" @bind-Value="officer.MiddleName"></InputText>
                <ValidationMessage For="@(() => officer.MiddleName)"></ValidationMessage>
            </div>
        </div>
    </div>

    <div class="form-group mb-3">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button class="btn btn-light">Cancel</button>
    </div>
</EditForm>

@code {
    int counter = 1;
    bool popup = false;

    CitationDto citation        = new();
    OfficerDto officer          = new();
    VehicleDto vehicle          = new();
    PlaceDto placeApprehended   = new();
    AddressDto address          = new();
    UserViolationDto violation  = new();

    List<ProvinceDto> provinces = new();
    List<CityDto> cities        = new();
    List<BarangayDto> barangays = new();
    List<UserViolationDto> userViolations = new();
    List<ViolationCategoryDto> categories = new();
    List<ViolationDto> violations         = new();
    List<ViolationFeeDto> violationFees   = new();
    List<string> itemConfiscated = new();

    private void ShowPopup() => popup = true;

    private void CloseDialog() => popup = false;

    private void SaveChangesAsync()
    {
        userViolations.Add(violation);
        popup     = false;
        violation = new();
    }

    private async Task OnValidSubmit()
    {
        citation.Address             = address;
        citation.VehicleDescription  = vehicle;
        citation.PlaceApprehended    = placeApprehended;
        citation.Violations          = userViolations;
        citation.ItemConfiscated     = itemConfiscated;
        citation.ApprehendingOfficer = officer;

        await citationClient.PostRequest(citation);
        navigation.NavigateTo("/issuedTicket");
    }

    private void SelectedLicenseType(ChangeEventArgs e)
    {
        if(e.Value!.ToString()! != null)
            citation.LicenseType = e.Value!.ToString()!;
    }

    private void SelectedVehicle(ChangeEventArgs e)
    {
        if ((bool)e.Value!)
            itemConfiscated.Add("Motor Vehicle");
        else
            itemConfiscated.Remove("Motor Vehicle");
    }

    private void SelectedLicense(ChangeEventArgs e)
    {
        if ((bool)e.Value!)
            itemConfiscated.Add("Driver's License");
        else
            itemConfiscated.Remove("Driver's License");
    }

    protected async override Task OnInitializedAsync()
    {
        provinces = await provinceClient.GetAllRequest();
        categories = await violationCatClient.GetAllRequest();
    }

    protected async void ProvinceClicked(ChangeEventArgs provinceEvent)
    {
        cities.Clear();

        if(provinceEvent.Value!.ToString()! == "0")
        {
            barangays.Clear();
            return;
        }

        address.Province = provinceEvent.Value!.ToString()!;
        cities = await cityClient.GetRequestByProvinceId(provinceEvent.Value!.ToString()!);
        this.StateHasChanged();
    }

    protected async void CityClicked(ChangeEventArgs cityEvent)
    {
        barangays.Clear();

        if (cityEvent.Value!.ToString()! == "0")
            return;

        address.City = cityEvent.Value!.ToString()!;
        barangays = await barangayClient.GetRequestByCityId(cityEvent.Value!.ToString()!);
        this.StateHasChanged();
    }

    protected async void BarangayClicked(ChangeEventArgs barangayClient)
    {
        address.Barangay = barangayClient.Value!.ToString()!;
        this.StateHasChanged();
    }

    protected async void ViolationCategoryClicked(ChangeEventArgs violationEvent)
    {
        violations.Clear();

        if (violationEvent.Value!.ToString()! == "0")
        {
            violationFees.Clear();
            return;            
        }

        violations         = await violationClient.GetRequestByCategoryId(violationEvent.Value!.ToString()!);
        violation.Category = violationEvent.Value!.ToString()!;
        this.StateHasChanged();
    }

    protected async void ViolationClicked(ChangeEventArgs violationEvent)
    {
        violationFees.Clear();
        if (violationEvent.Value!.ToString()! == "0") return;

        violationFees  = await violationFeeClient.GetRequestByViolationId(violationEvent.Value!.ToString()!);
        violation.Name = violationEvent.Value!.ToString()!;
        this.StateHasChanged();
    }

    protected async void ViolationFeeClicked(ChangeEventArgs violationFeeEvent)
    {
        violation.Offense = violationFeeEvent.Value!.ToString()!.Substring(0, 1);
        violation.Fine    = Double.Parse(violationFeeEvent.Value!.ToString()!.Substring(3));
        this.StateHasChanged();
    }

    private async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        var file = e.File;
    }
}