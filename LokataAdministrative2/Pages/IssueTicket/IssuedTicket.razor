@page "/issuedTicket"
@inject ICitationClient citationClient;
@inject NavigationManager NavigationManager

<h2>Traffic Citation Tickets</h2>
<hr />
<h4>Recorded Tickets</h4>
&nbsp;
<div class="form-group row">
    <label class="col-md-12">Search</label>
    <div class="col-md-4">
        <input class="form-control" /> <!-- bind="*"-->
    </div>   
</div>

<div class="form-group">
    <button class="btn btn-primary">Search</button>
    <!-- <ValidationMessage For="*" /> -->
</div>
 
<table class="table table-hover">
    <thead>
        <tr>
            <th>No.</th>
            <th>TCT No.</th>
            <th>License No.</th>
            <th>Date Recorded</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (citationList != null)
        {
            @foreach (var item in citationList)
            {
                <tr>
                    <td>@(citationList.IndexOf(item) + 1)</td>
                    <td>@item.TctNo</td>
                    <td>@item.LicenseNo</td>
                    <td>@item.DateRecord</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="address/@item.Id"><i class="oi oi-pencil"></i></a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(()=> DeleteAddress(item.Id!))">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="TicketIssuePage">Record Ticket</button>
@code {
    List<CitationDto> citationList = new();

    protected override async Task OnInitializedAsync()
    {
        citationList = await citationClient.GetAllRequest();
    }

    private async Task DeleteAddress(string id)
    {
        await citationClient.DeleteRequest(id);
        await OnInitializedAsync();
    }

    private void TicketIssuePage()
    {
        NavigationManager.NavigateTo("/issuedTicketPage");
    }
}